<?php
/**
 * the main administration function
 *
 * @return       output       The main module admin page.
 */
function MyProfile_admin_main()
{    
    // Security check 
    if (!SecurityUtil::checkPermission('MyProfile::', '::', ACCESS_ADMIN)) return LogUtil::registerPermissionError();
    // Create output
    $render = FormUtil::newpnForm('MyProfile');
    // Return output
    return $render->pnFormExecute('myprofile_admin_main.htm', new myProfile_admin_settingsHandler());
}

/**
 * plugin settings
 *
 * @return       output       The main module admin page.
 */
function MyProfile_admin_plugins()
{    
    // Security check 
    if (!SecurityUtil::checkPermission('MyProfile::', '::', ACCESS_ADMIN)) return LogUtil::registerPermissionError();
    // Create output
    $render = pnRender::getInstance('MyProfile');
    // get the plugins
    $render->assign('plugins',pnModAPIFunc('MyProfile','admin','getPlugins'));
    // Return output
    return $render->fetch('myprofile_admin_plugins.htm');
}

/**
 * ajax call to store the new field-list
 *
 * @return	output
 */
function MyProfile_admin_ajaxSaveList()
{
    // Security check
    if (!SecurityUtil::checkPermission('MyProfile::', '::', ACCESS_ADMIN)) return LogUtil::registerPermissionError();
	// store the new order    
	pnModAPIFunc('MyProfile','admin','ajaxSaveList',array('list'=> FormUtil::getPassedValue('myprofile_list')));
    return true;
}

/**
 * ajax call to store the new field-list
 *
 * @return	output
 */
function MyProfile_admin_saveList()
{
	$order = unserialize(FormUtil::getPassedValue('order'));
    // Security check
    if (!SecurityUtil::checkPermission('MyProfile::', '::', ACCESS_ADMIN)) return LogUtil::registerPermissionError();
 	// store the new order    
	pnModAPIFunc('MyProfile','admin','ajaxSaveList',array('list'=>$order));
    LogUtil::registerStatus(_MYPROFILEELEMENTMOVED);
    return pnRedirect(pnModURL('MyProfile','admin','fields'));
}

/**
 * edit a user's profile data as an admininstrator
 *
 * @return       redirection
 */
function MyProfile_admin_editProfile()
{    
	$uid 		= FormUtil::getPassedValue('uid');
	$uname 		= FormUtil::getPassedValue('uname');
	$trans_uid 	= pnUserGetIDFromName($uname);
	if (isset($uname) && ($trans_uid > 0)) return pnRedirect(pnModURL('MyProfile','user','main',array('load_uid'=>$trans_uid)));
	else if (isset($uid) && ($uid > 0)) return pnRedirect(pnModURL('MyProfile','user','main',array('load_uid'=>$uid)));
	else LogUtil::registerError(_MYPROFILEUNOTFOUND);
	return pnRedirect(pnModUrl('MyProfile','admin','main'));
}

/**
 * the main administration function
 *
 * @return       output       The main module admin page.
 */
function MyProfile_admin_update()
{    
    // Security check 
    if (!SecurityUtil::checkPermission('MyProfile::', '::', ACCESS_ADMIN)) return LogUtil::registerPermissionError();
    $changetable = FormUtil::getPassedValue('changetable');
    if ($changetable == 1) {
	  	DBUtil::ChangeTable('myprofile');
	  	return pnRedirect(pnModURL('MyProfile','admin','fields'));
	}
    else {
		pnModAPIFunc('MyProfile','admin','updateTableDefinition');
		return pnRedirect(pnModURL('MyProfile','admin','update',array('changetable'=>1)));
	}
}

/**
 * the main administration function
 *
 * @return       output       The main module admin page.
 */
function MyProfile_admin_fields()
{
    // Security check 
    if (!SecurityUtil::checkPermission('MyProfile::', '::', ACCESS_ADMIN)) return LogUtil::registerPermissionError();
    // Create output object
    $render = pnRender::getInstance('MyProfile');
   	// add the data to the template
   	$fields = pnModAPIFunc('MyProfile','admin','addOrderLinkToFields',array('fields'=>pnModAPIFunc('MyProfile','admin','getFields')));
   	// if there are no fields defined we can automatically 
	// forward the user to the "add field" page
	if (count($fields)==0) return pnRedirect(pnModURL('MyProfile','admin','addField'));
   	$render->assign('fields',$fields);
	$render->assign('ajaxurl',pnGetBaseUrl().pnModURL('MyProfile','admin','ajaxSaveList'));
    // Return the output that has been generated by this function
    return $render->fetch('myprofile_admin_fields.htm');
}

/**
 * add new fields
 *
 * @return       output 
 */
function MyProfile_admin_addField()
{
    // Security check 
    if (!SecurityUtil::checkPermission('MyProfile::', '::', ACCESS_ADMIN)) return LogUtil::registerPermissionError();
    
	// some config file checks
	if (!pnModAPIFunc('MyProfile','admin','checkConfigFile')) {
	  	$render = pnRender::getInstance('MyProfile');
	  	$render->assign('id',(int)FormUtil::getPassedValue('id'));
	  	return $render->fetch('myprofile_admin_configfailure.htm');
	}

    // Create output
    $render = FormUtil::newpnForm('MyProfile');

    PageUtil::addVar('javascript','modules/MyProfile/pnjavascript/myprofile.js');
    
	// create dropdown fields
	$items_yesno = array (			array('text' => _MYPROFILENO,		'value' => 0),
									array('text' => _MYPROFILEYES,		'value' => 1) );
	$items_fieldtype = array (		
									array('text' => _MYPROFILESEPARATOR,'value' => 'SEPARATOR'),
									array('text' => _MYPROFILESTRING,	'value' => 'STRING'),
									array('text' => _MYPROFILEINT,		'value' => 'INTEGER'),
									array('text' => _MYPROFILEFLOAT,	'value' => 'FLOAT'),
									array('text' => _MYPROFILETEXTBOX,	'value' => 'TEXTBOX'),
									array('text' => _MYPROFILEURL,		'value' => 'URL'),
									array('text' => _MYPROFILEUIN,		'value' => 'UIN'),
									array('text' => _MYPROFILESKYPEID,	'value' => 'SKYPEID'),
									array('text' => _MYPROFILEDATE,		'value' => 'DATE'),
									array('text' => _MYPROFILETIMESTAMP,'value' => 'TIMESTAMP') );
	$items_public_status = array (	array('text' => _MYPROFILENOPROTECT,'value' => 0),
									array('text' => _MYPROFILEREGONLY,	'value' => 1),
									array('text' => _MYPROFILEADMINONLY,'value' => 2) );
	$render->assign('items_yesno',			$items_yesno);
	$render->assign('items_fieldtype',		$items_fieldtype);
	$render->assign('items_public_status',	$items_public_status);
	
	// assign default values
	$render->assign('mandatory',1);
	$render->assign('public_status',1);
	$render->assign('active',1);
	$render->assign('shown',1);
    
    // Return the output
    return $render->pnFormExecute('myprofile_admin_addfield.htm', new myProfile_admin_addFieldHandler());
}




/* ************************************ pnForm handler ********************************* */
class MyProfile_admin_addFieldHandler
{
    var $id;
    function initialize(&$render)
    {
		$this->id = (int)FormUtil::getPassedValue('id');
		if ($this->id > 0) {
			$data = DBUtil::selectObjectByID('myprofile_fields', $this->id);
			$render->assign($data);
		}
		return true;
    }
    function handleCommand(&$render, &$args)
    {
		if ($args['commandName']=='update') {
		    // Security check 
		    if (!SecurityUtil::checkPermission('MyProfile::', '::', ACCESS_ADMIN)) return LogUtil::registerPermissionError();

			// get the pnForm data and do a validation check
		    $obj = $render->pnFormGetValues();		    
		    
		    // delete the field?
		    if ($obj['deletefield'] == "1") {
		      	if ($obj['fieldtype']!='SEPARATOR') 
				  	if (!DBUtil::dropColumn('myprofile','MyProfile_'.$obj['identifier'])) {
						logUtil::registerError(_MYPROFILEFIELDDELERR);
						return false;
					}
			  	if (DBUtil::deleteObjectByID('myprofile_fields',$this->id)) {
			  	  	logUtil::registerStatus(_MYPROFILEFIELDDEL);
			  	  	pnModAPIFunc('MyProfile','admin','updateTableDefinition');
			  	  	return pnRedirect(pnModURL('MyProfile','admin','fields'));
			  	}
				else logUtil::registerError(_MYPROFILEFIELDDELERR);
		    }
		    if (!$render->pnFormIsValid()) return false;
		    if ($this->id > 0) $obj['id']=$this->id;

		    if ($this->id > 0) {
		      	$result = DBUtil::updateObject($obj, 'myprofile_fields');
		      	if ($result) LogUtil::registerStatus(_MYPROFILEFIELDUPDATED);
			}
			else {
			  	$fields = pnModAPIFunc('MyProfile','admin','getFields');
			  	$obj['position']= count($fields);
			  	// remove blanks if needed
			  	if ($obj['fieldtype'] != 'SEPARATOR') {
				    $obj['identifier'] = str_replace(' ','_',$obj['identifier']);
				}
				DBUtil::insertObject($obj, 'myprofile_fields');
				LogUtil::registerStatus(_MYPROFILEFIELDCREATED);
			}
			return pnRedirect(pnModURL('MyProfile','admin','update'));
		}
		return true;
    }
}

class MyProfile_admin_settingsHandler
{
    function initialize(&$render)
    {
	  	$data['notabs'] = pnModGetVar('MyProfile','notabs');
	  	$data['dateformat'] = pnModGetVar('MyProfile','dateformat');
	  	$data['noverification'] = pnModGetVar('MyProfile','noverification');
	  	$render->assign($data);
		return true;
    }
    function handleCommand(&$render, &$args)
    {
		if ($args['commandName']=='update') {
		    // Security check 
		    if (!SecurityUtil::checkPermission('MyProfile::', '::', ACCESS_ADMIN)) return LogUtil::registerPermissionError();

			// get the pnForm data and do a validation check
		    $obj = $render->pnFormGetValues();		    
		    
		    if (!$render->pnFormIsValid()) return false;
		    pnModSetVar('MyProfile','notabs',$obj['notabs']);
		    pnModSetVar('MyProfile','dateformat',$obj['dateformat']);
		    pnModSetVar('MyProfile','noverification',$obj['noverification']);
			LogUtil::registerStatus(_MYPROFILECFGSTORED);
		}
		return true;
    }
}
?>